# -*- coding: utf-8 -*-
"""Chapter6:【提出課題: 解答用】LLMRouterChainを活用したシステムに機能追加してみよう

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JTQ7xp2jqQDm_EEvaSgdW85ZbqxNSuD_

# Lesson11: LangChainの主要モジュール2【Chains】
# Chapter6:【提出課題: 解答用】LLMRouterChainを活用したシステムに機能追加してみよう

事前準備を行った上で、提出課題に取り組みましょう。

**【提出方法】**  
Slackでメンターをメンションの上、当シート右上の「共有」からリンクをコピーし、提出してください。

## 事前準備

OpenAI APIキーの設定
"""

import os
from google.colab import userdata

os.environ["OPENAI_API_KEY"] = userdata.get("OPENAI_API_KEY")

"""各種パッケージのインストール"""

!pip install langchain==0.3.0 openai==1.47.0 langchain-community==0.3.0 langchain-openai==0.2.2 httpx==0.27.2

"""## 提出課題

以下は、「Chapter4: その他のChains」の「LLMRouterChain」で解説したコードです。現在、4つのテーマごとにChainsを作り、ユーザーの入力内容に応じて実行するChainsを分岐させるシステムとなっています。



1.   stress: 親の育児ストレスを軽減するための専門家
2.   nutrition: 子供の栄養に詳しい専門家
3.   sleep: 子どもの睡眠習慣に詳しい専門家
4.   balance: 働く親のための育児と仕事の両立に詳しい専門家

ここに1つテーマを追加し、5つのChainsの中からLLMRouterChainに実行するChainsを分岐判断させるシステムに改修してください。

### 【ヒント】

ChatGPTなどのテキスト生成AIを使うことで、自分の頭を使うことなく、手軽にテーマを追加できます。

### 【解答】
"""

stress_template = """
あなたは親の育児ストレスを軽減するための専門家です。
育児疲れやストレス管理に関する実践的なアドバイスを提供します。
親自身の心身の健康を保つための方法を教えます。

質問：{input}
"""

nutrition_template = """
あなたは子どもの栄養に詳しいアドバイザーです。
子どもの健康な発育を支える食事や栄養バランスについてアドバイスを提供します。
食事の習慣や偏食に関する質問にも丁寧に答えます。

質問：{input}
"""

sleep_template = """
あなたは子どもの睡眠習慣に詳しい専門家です。
子どもの夜泣きや睡眠不足に関する解決策を提供し、健全な睡眠を促すためのアドバイスを行います。
親が子どもの睡眠問題に対処できるようサポートします。

質問：{input}
"""

balance_template = """
あなたは働く親のための育児と仕事の両立に詳しいアドバイザーです。
仕事と育児のバランスを保つための実践的なアドバイスを提供し、時間管理や家族とのコミュニケーションをサポートします。

質問：{input}
"""

disagree_template = """
あなたは子育てにおける夫婦間の意見相違に詳しいアドバイザーです。
子育てに対する夫婦間での意見や価値観のバランスを保つための実践的なアドバイスを行ないます。

質問：{input}
"""

prompt_infos = [
    {
        "name": "stress",
        "description": "親の育児ストレスを軽減するための専門家です",
        "prompt_template": stress_template
    },
    {
        "name": "nutrition",
        "description": "子供の栄養に詳しい専門家です",
        "prompt_template": nutrition_template
    },
    {
        "name": "sleep",
        "description": "子どもの睡眠習慣に詳しい専門家です",
        "prompt_template": sleep_template
    },
    {
        "name": "balance",
        "description": "働く親のための育児と仕事の両立に詳しい専門家です",
        "prompt_template": balance_template
    },
    {
        "name": "disagree",
        "description": "子育てにおける夫婦間の意見相違に詳しい専門家です",
        "prompt_template": disagree_template
    },
]

from langchain_openai import ChatOpenAI
from langchain.prompts import PromptTemplate
from langchain import LLMChain

llm = ChatOpenAI(model_name="gpt-4o-mini", temperature=0.5)

destination_chains = {}
for prompt_info in prompt_infos:
    name = prompt_info["name"]
    prompt_template = prompt_info["prompt_template"]
    prompt = PromptTemplate(template=prompt_template)
    chain = LLMChain(llm=llm, prompt=prompt)
    destination_chains[name] = chain

destination_chains

default_prompt = PromptTemplate(input_variables=["input"], template="{input}")
default_chain = LLMChain(llm=llm, prompt=default_prompt)

destinations = []
for p in prompt_infos:
    destinations.append(f"{p['name']}: {p['description']}")

destinations

destinations_str = "\n".join(destinations)

print(destinations_str)

from langchain.chains.router.multi_prompt_prompt import MULTI_PROMPT_ROUTER_TEMPLATE

print(MULTI_PROMPT_ROUTER_TEMPLATE)

router_template = MULTI_PROMPT_ROUTER_TEMPLATE.format(
    destinations=destinations_str
)

from langchain.chains.router.llm_router import RouterOutputParser

router_prompt = PromptTemplate(
    template=router_template,
    input_variables=["input"],
    output_parser=RouterOutputParser(),
)

from langchain.chains.router.llm_router import LLMRouterChain

router_chain = LLMRouterChain.from_llm(llm, router_prompt)

from langchain.chains.router import MultiPromptChain

chain = MultiPromptChain(
	 router_chain=router_chain,
	 destination_chains=destination_chains,
	 default_chain=default_chain,
	 verbose=True
)

chain.run("栄養バランスの良い食事についてアドバイスをください。")

chain.run("子供が毎日夜中に起きてしまいます。子供が心地よく睡眠できる方法を教えてください。")

print(chain.run("子供の教育方針について、私と夫で意見が異なります。子供も困惑してしまうので良い方法をしえてください。"))



